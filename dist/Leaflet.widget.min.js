/*! Leaflet.widget - v0.1.0 - 2012-10-12
* Copyright (c) 2012 function () {

// If the string looks like an identifier, then we can return it as is.
// If the string contains no control characters, no quote characters, and no
// backslash characters, then we can simply slap some quotes around it.
// Otherwise we must also replace the offending characters with safe
// sequences.

            if (ix.test(this)) {
                return this;
            }
            if (nx.test(this)) {
                return '"' + this.replace(nxg, function (a) {
                    var c = escapes[a];
                    if (c) {
                        return c;
                    }
                    return '\\u' + ('0000' + a.charCodeAt().toString(16)).slice(-4);
                }) + '"';
            }
            return '"' + this + '"';
        }; Licensed BSD */
L.Map.mergeOptions({widget:!1}),L.Handler.Widget=L.Handler.extend({includes:L.Mixin.Events,options:{defaultVectorStyle:{color:"#0033ff"},selectedVectorStyle:{color:"#F00"},drawVectorStyle:{color:"#F0F",clickable:!0}},initialize:function(e,t){this._map=e,L.Util.setOptions(this,t),this._map.drawControl||this._initDraw()},addHooks:function(){this._map&&this.options.attach&&(this.vectors=L.layerGroup().addTo(this._map),this._attach=L.DomUtil.get(this.options.attach),this.load(this._attach.value),this._map.drawControl.handlers.select.options.selectable=this.vectors,this._map.on({"draw:poly-created draw:marker-created":this._onCreated,selected:this._onSelected,deselected:this._onDeselected,layerremove:this._unbind},this))},removeHooks:function(){this._map&&(this._map.removeLayer(this.vectors),delete this.vectors,this._map.off({"draw:poly-created draw:marker-created":this._onCreated,selected:this._onSelected,deselected:this._onDeselected,layerremove:this._unbind},this))},_initDraw:function(){this._map.drawControl=(new L.Control.Draw({position:"topright",polyline:{shapeOptions:this.options.drawVectorStyle},polygon:{shapeOptions:this.options.drawVectorStyle},circle:!1,rectangle:!1})).addTo(this._map)},_addVector:function(e){this.vectors.addLayer(e)},_onCreated:function(e){var t=/(?!:)[a-z]+(?=-)/.exec(e.type)[0],n=e[t]||!1;n&&this._addVector(n)},_onSelected:function(e){var t=e.layer;if(t.setStyle)t.setStyle(this.options.selectedVectorStyle);else{var n=t.options.icon;n.options.className="marker-selected",t.setIcon(n),n.options.className=""}},_onDeselected:function(e){var t=e.layer;t.setStyle?t.setStyle(this.options.defaultVectorStyle):t.setIcon(t.options.icon)},_unbind:function(e){var t=e.layer;this.vectors.removeLayer(t)},load:function(e){var t=typeof e=="string"?JSON.parse(e):e,n=function(e,t){this._addVector(t)};if(!t)return;return L.geoJson(t,{onEachFeature:L.Util.bind(n,this)})},toGeoJSON:function(){var e,t=[];return this.vectors.eachLayer(function(n){e=this.vectorToGeometry(n),t.push(this.feature(e))},this),this.featureCollection(t)},write:function(){var e=this.toGeoJSON();this._attach.value=JSON.stringify(e)},vectorToGeometry:function(e){var t={};return e instanceof L.MultiPolygon?(t.type="MultiPolygon",t.coordinates=[],e.eachLayer(function(e){t.coordinates.push(this.vectorToGeometry(e).coordinates)},this)):e instanceof L.MultiPolyline?(t.type="MultiLineString",t.coordinates=[],e.eachLayer(function(e){t.coordinates.push(this.vectorToGeometry(e).coordinates)},this)):e instanceof L.FeatureGroup?(t.type="MultiPoint",t.coordinates=[],e.eachLayer(function(e){var n=this.vectorToGeometry(e);if(n.type!=="Point")return;t.coordinates.push(n.coordinates)},this)):e instanceof L.Polygon?(t.type="Polygon",t.coordinates=[this._latLngsToCoords(e.getLatLngs())]):e instanceof L.Polyline?(t.type="LineString",t.coordinates=this._latLngsToCoords(e.getLatLngs())):e instanceof L.Marker&&(t.type="Point",t.coordinates=this._latLngToCoord(e.getLatLng())),t},featureCollection:function(e){return{type:"FeatureCollection",features:e||[]}},feature:function(e,t){return{type:"Feature",geometry:e,properties:t||{}}},_latLngsToCoords:function(e){var t=[],n;for(var r=0,i=e.length;r<i;r++)n=this._latLngToCoord(e[r]),t.push(n);return t},_latLngToCoord:function(e){return[e.lng,e.lat]}}),L.Map.addInitHook(function(){if(this.options.widget){var e=this.options.widget;this.widget=new L.Handler.Widget(this,e)}});